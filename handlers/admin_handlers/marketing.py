from aiogram import Router, types, F, Bot
from aiogram.dispatcher.fsm.context import FSMContext
from aiogram.types import Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from data_base.DBuse import data_getter, sql_safe_insert
from filters.isAdmin import IsAdmin
from states.admin_states import admin

router = Router()
router.message.filter(state=admin)


@router.message(IsAdmin(level=['–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥']), (F.text == '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ üìà'), state=admin.menu)
async def marketing_menu(message: Message, state: FSMContext):
    await state.set_state(admin.marketing)
    nmarkup = ReplyKeyboardBuilder()
    text = '–≠—Ç–æ –º–µ–Ω—é –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ –Ω–µ–º –≤—ã –º–æ–∂–µ—Ç–µ:\n- –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É-—Å—á–µ—Ç—á–∏–∫' \
           '\n- –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∏–º–µ—é—â–∏–º—Å—è —Å—á–µ—Ç—á–∏–∫–∞–º\n\n–£–¥–∞—á–∏!'
    nmarkup.row(types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É"))
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True))


@router.message((F.text == '–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É'), state=admin.marketing)
async def marketing_new_link_name(message: Message, state: FSMContext):
    await state.set_state(admin.market_new_link)
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–û—Ç–º–µ–Ω–∞"))
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–∞–π—Ç–µ —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–µ –ø–æ–Ω—è—Ç–Ω–æ–µ –∏–º—è. –ö –ø—Ä–∏–º–µ—Ä—É,'
                         ' –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω–æ–π –∫–∞–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—É—é –≤—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏.',
                         reply_markup=nmarkup.as_markup(resize_keyboard=True))


@router.message(state=admin.market_new_link)
async def marketing_new_link(message: Message, bot: Bot, state: FSMContext):
    query = "SELECT * FROM dumbstats.advertising WHERE id like 'adv_%'"
    leng = len(await data_getter(query))
    label = message.text.replace(" ", "_")
    link = f'adv_{leng + 1}'
    bot_link = f'https://t.me/{(await bot.get_me()).username.replace(" ", "_")}?start={link}'
    await sql_safe_insert('dumbstats', 'advertising', {'id': link, 'label': label, 'count': 0})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É"))
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    await state.set_state(admin.marketing)
    await message.answer(f'–°–æ–∑–¥–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º {label} —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ:\n{bot_link}',
                         reply_markup=nmarkup.as_markup(resize_keyboard=True))


@router.message((F.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤—Å–µ —Å—Å—ã–ª–∫–∏"), state=admin.marketing)
async def marketing_all_links(message: Message, bot: Bot, state: FSMContext):
    query = "SELECT * FROM dumbstats.advertising WHERE id like 'adv_%' ORDER BY id"
    companies = await data_getter(query)
    count, text = 0, ''
    for company in companies:
        count += 1
        bot_link = f'https://t.me/{(await bot.get_me()).username.replace(" ", "_")}?start={company[0]}'
        text = text + '-------------------------------------\n' + \
               f'<code>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏: {company[1]}\n' \
               f'–°—Å—ã–ª–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏:\n{bot_link}\n' \
               f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–∂–∞–≤—à–∏—Ö "–°—Ç–∞—Ä—Ç": {company[2]}</code>' + \
               '\n-------------------------------------\n'
        if count == 3 or company == companies[-1]:
            await message.answer(text)
            count, text = 0, ''
