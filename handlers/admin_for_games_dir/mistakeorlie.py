from aiogram import Router, types, F
from aiogram.dispatcher.fsm.context import FSMContext
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from data_base.DBuse import data_getter
from keyboards.admin_keys import game_keys
from log import logg
from states.admin_states import admin

router = Router()
router.message.filter(state=admin)


@router.message((F.text == "–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã üí¢"), state=admin.game_menu)
async def admin_home(message: types.Message, state: FSMContext):
    await state.clear()
    await logg.admin_logs(message.from_user.id, message.from_user.username,
                          "–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã) - –≤—ã–±–æ—Ä –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç–∞")
    nmrkup = ReplyKeyboardBuilder()
    nmrkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç–∞ –±–µ–∑ –æ–ø–µ—á–∞—Ç–æ–∫(–¢–û–õ–¨–ö–û –§–ê–ú–ò–õ–ò–Æ —Å –ë–û–õ–¨–®–û–ô –ë–£–ö–í–´)",
                         reply_markup=nmrkup.as_markup(resize_keyboard=True))
    await state.set_state(admin.addingMistakeOrLie)


@router.message(state=admin.addingMistakeOrLie)
async def menu(message: types.Message, state: FSMContext):
    await state.update_data(surnameOfPerson=message.text)
    await message.answer(
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?",
        reply_markup=game_keys())
    await state.set_state(admin.addingMistakeOrLie_adding)


@router.message((F.text == "–î–æ–±–∞–≤–∏—Ç—å —Å—é–∂–µ—Ç"), state=admin.addingMistakeOrLie_adding)
async def menu(message: types.Message, state: FSMContext):
    await logg.admin_logs(message.from_user.id, message.from_user.username,
                          "–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã) - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ")
    nmrkup = ReplyKeyboardBuilder()
    nmrkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    await message.answer(
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏ —Ç–µ–∫—Å—Ç –∫ –ø–æ—Å—Ç—É —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Ä–∞–∑–º–µ—Ç–∫–æ–π",
        reply_markup=nmrkup.as_markup(resize_keyboard=True))

    await state.set_state(admin.addingMistakeOrLie_media)


@router.message(state=admin.addingMistakeOrLie_media)
async def menu(message: types.Message, state: FSMContext):
    try:
        media_id = message.video.file_id
    except:
        try:
            media_id = message.photo[0].file_id
        except:
            await message.answer("–ù–µ–≤–∏–∂—É –º–µ–¥–∏–∞")
    text = message.html_text
    data = await state.get_data()
    nmrkup = ReplyKeyboardBuilder()
    nmrkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    surname = data['surnameOfPerson']
    postgressdata = await data_getter(f"select name from assets where name like '%{surname}%'")
    count = len(postgressdata)
    await logg.admin_logs(message.from_user.id, message.from_user.username,
                          f"–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã) - –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö \n {media_id} , statement_{surname}_{count}")
    # await sql_safe_update('assets', {"t_id": media_id}, {'name': f"statement_{surname}_{count}"})
    try:
        result = await data_getter(
            f"insert into assets(t_id,name) values('{media_id}', 'statement_{surname}_{count + 1}'); commit;")
        print(result)
        await data_getter(
            f"insert into mistakeorlie(asset_name,belivers,nonbelivers,rebuttal) values ('statement_{surname}_{count + 1}', 1,1,'{text}'); commit; ")
    except Exception as ex:
        await logg.admin_logs(message.from_user.id, message.from_user.username,
                              f"–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã) - –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö \n {media_id} , statement_{surname}_{count + 1}+{ex}")
        await message.answer(str(ex))
    await message.answer(f"–î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–¥ —Ç–µ–≥–æ–º statement_{surname}_{count + 1}",
                         reply_markup=nmrkup.as_markup(resize_keyboard=True))
    await state.clear()


@router.message((F.text == "–£–¥–∞–ª–∏—Ç—å —Å—é–∂–µ—Ç"), state=admin.addingMistakeOrLie_adding)
async def menu(message: types.Message, state: FSMContext):
    await logg.admin_logs(message.from_user.id, message.from_user.username,
                          "–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã) - —É–¥–∞–ª–µ–Ω–∏–µ")
    data = await state.get_data()
    tag = data['surnameOfPerson']
    postgresdata = await data_getter(
        f"select asset_name from mistakeorlie where asset_name like '%{tag}%' order by asset_name asc")
    nmrkup = ReplyKeyboardBuilder()
    for i in postgresdata:
        nmrkup.row(types.KeyboardButton(text=i[0]))
    await message.answer(
        "–í—ã–±–µ—Ä–µ—Ç–µ —Å—é–∂–µ—Ç, –æ–Ω–∏ –∏–¥—É—Ç –ø–æ –ø–æ—Ä—è–¥–∫—É",
        reply_markup=nmrkup.as_markup(resize_keyboard=True))

    await state.set_state(admin.addingMistakeOrLie_deleting)


@router.message(state=admin.addingMistakeOrLie_deleting)
async def admin_home(message: types.Message, state: FSMContext):
    await state.update_data(media_to_delete=message.text)
    nmrkup = ReplyKeyboardBuilder()
    nmrkup.row(types.KeyboardButton(text="–î–∞"))
    nmrkup.row(types.KeyboardButton(text="–ù–µ—Ç"))
    media_id = await data_getter(f"select t_id from assets where name = '{message.text}'")
    print('asdqawddasdad')
    print(media_id)
    print(media_id[0])
    try:
        await message.answer_video(media_id[0][0], caption="–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ. –≠—Ç–æ —Å—é–∂–µ—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?",
                                   reply_markup=nmrkup.as_markup(resize_keyboard=True))
    except:
        await message.answer_photo(media_id[0][0], caption="–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ. –≠—Ç–æ —Å—é–∂–µ—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å?",
                                   reply_markup=nmrkup.as_markup(resize_keyboard=True))
    await state.set_state(admin.addingMistakeOrLie_deleting_apply)


@router.message(state=admin.addingMistakeOrLie_deleting_apply)
async def admin_home(message: types.Message, state: FSMContext):
    data = await state.get_data()
    media_id = data['media_to_delete']
    nmrkup = ReplyKeyboardBuilder()
    nmrkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    surname = data['surnameOfPerson']
    if message.text == "–î–∞":
        await data_getter(f"delete from mistakeorlie where asset_name = '{media_id}'; commit;")
        await message.answer(f"–ú–µ–¥–∏–∞ –ø–æ–¥ —Ç–µ–≥–æ–º <b>{media_id}</b> —É–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–≥—Ä—ã ", parse_mode='html',
                             reply_markup=nmrkup.as_markup())
        how_many_rounds = await data_getter(f"select asset_name from mistakeorlie where asset_name like '%{surname}%'")

    elif message.text == "–ù–µ—Ç":
        await message.answer("–í–µ—Ä–Ω–µ–º—Å—è –Ω–∞–∑–∞–¥", reply_markup=nmrkup.as_markup())
    else:
        await message.answer("–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–∂–∞—Ç—å /start –∏ —Å–Ω–æ–≤–∞ –∑–∞–π—Ç–∏ –≤ –∞–¥–º–∏–Ω–∫—É")
    await state.clear()
