from aiogram import Router, F
from aiogram import types
from aiogram.dispatcher.fsm.state import StatesGroup, State
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from handlers.welcome_messages import commands_restart

from data_base.DBuse import sql_safe_select
from stats.stat import mongo_update_stat


class StopWarState(StatesGroup):
    main = State()

flags = {"throttling_key": "True"}
router = Router()
router.message.filter(state=StopWarState)


@router.message(F.text == "–°–∫–æ—Ä–µ–µ –¥–∞ ‚úÖ", flags=flags)
async def stopwar_rather_yes(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_rather_yes'})
    photo = await sql_safe_select('t_id', 'assets', {'name': 'stopwar_rather_yes'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.add(types.KeyboardButton(text="–°–æ–≥–ª–∞—Å–µ–Ω(–∞) üëå"))
    nmarkup.add(types.KeyboardButton(text="–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω(–∞) üôÖ"))
    try:
        await message.answer_photo(photo, caption=text, reply_markup=nmarkup.as_markup(resize_keyboard=True))
    except:
        await message.answer_video(photo, caption=text, reply_markup=nmarkup.as_markup(resize_keyboard=True))


@router.message(F.text == "–ù–µ –∑–Ω–∞—é ü§∑‚Äç‚ôÇÔ∏è", flags=flags)
async def stopwar_idk(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_idk'})
    photo = await sql_safe_select('t_id', 'assets', {'name': 'stopwar_idk'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.add(types.KeyboardButton(text="–°–æ–≥–ª–∞—Å–µ–Ω(–∞) üëå"))
    nmarkup.add(types.KeyboardButton(text="–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω(–∞) üôÖ"))
    try:
        await message.answer_photo(photo, caption=text, reply_markup=nmarkup.as_markup(resize_keyboard=True))
    except:
        await message.answer_video(photo, caption=text, reply_markup=nmarkup.as_markup(resize_keyboard=True))


@router.message(F.text == "–°–∫–æ—Ä–µ–µ –Ω–µ—Ç ‚ùå", flags=flags)
async def stopwar_rather_no(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_rather_no'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏–º üëå"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ù–µ —Å–æ–≥–ª–∞—Å–µ–Ω(–∞) üôÖ") | (F.text == "–°–æ–≥–ª–∞—Å–µ–Ω(–∞) üëå") | (F.text == "–ü—Ä–æ–¥–æ–ª–∂–∏–º üëå"), flags=flags)
async def stopwar_will_it_stop(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_will_it_stop'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–∞, —ç—Ç–æ –∑–∞–∫–æ–Ω—á–∏—Ç –≤–æ–π–Ω—É üïä"))
    nmarkup.row(types.KeyboardButton(text="–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ–≤—ã–π –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ–π–Ω—É üó°"))
    nmarkup.row(types.KeyboardButton(text="–ù–µ –∑–Ω–∞—é ü§∑‚Äç‚ôÄÔ∏è"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–î–∞, —ç—Ç–æ –∑–∞–∫–æ–Ω—á–∏—Ç –≤–æ–π–Ω—É üïä"), flags=flags)
async def stopwar_ofc(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_ofc'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏–ºüëå"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ù–µ –∑–Ω–∞—é ü§∑‚Äç‚ôÄÔ∏è") | (F.text == "–ù–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ–≤—ã–π –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –º–æ–∂–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ–π–Ω—É üó°"), flags=flags)
async def stopwar_war_eternal(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_war_eternal'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∞–π ‚è≥"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ü—Ä–æ–¥–æ–ª–∂–∞–π ‚è≥"), flags=flags)
async def stopwar_isolation(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_isolation'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏–ºüëå"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ü—Ä–æ–¥–æ–ª–∂–∏–ºüëå"), flags=flags)
async def stopwar_stop_putin(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_stop_putin'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤—ã–±–æ—Ä–æ–≤ üìä"))
    nmarkup.row(types.KeyboardButton(text="–ü–æ –∏–Ω—ã–º –ø—Ä–∏—á–∏–Ω–∞–º üíÄ"))
    nmarkup.row(types.KeyboardButton(text="–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å ü§î"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤—ã–±–æ—Ä–æ–≤ üìä") | (F.text == "–°–ª–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å ü§î"), flags=flags)
async def stopwar_stolen_votes(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_stolen_votes'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ê —á—Ç–æ –≥–ª–∞–≤–Ω–æ–µ?"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ü–æ –∏–Ω—ã–º –ø—Ä–∏—á–∏–Ω–∞–º üíÄ"), flags=flags)
async def stopwar_just_a_scene(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_just_a_scene'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ê —á—Ç–æ –≥–ª–∞–≤–Ω–æ–µ?"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ê —á—Ç–æ –≥–ª–∞–≤–Ω–æ–µ?"), flags=flags)
async def stopwar_end_it_now(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_end_it_now'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ß—Ç–æ —Ç—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å ‚ùì ‚ùì ‚ùì"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–ß—Ç–æ —Ç—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—à—å ‚ùì ‚ùì ‚ùì"), flags=flags)
async def stopwar_lets_fight(message: Message):
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_lets_fight'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–°–ø–∞—Å–∏–±–æ ü§ù"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)


@router.message((F.text == "–°–ø–∞—Å–∏–±–æ ü§ù"), flags=flags)
async def stopwar_lets_fight(message: Message):
    await mongo_update_stat(message.from_user.id, 'end')
    text = await sql_safe_select('text', 'texts', {'name': 'stopwar_hello_world'})
    text2 = await sql_safe_select('text', 'texts', {'name': 'stopwar_send_me'})
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ ‚ôªÔ∏è"))
    await message.answer(text, reply_markup=nmarkup.as_markup(resize_keyboard=True), disable_web_page_preview=True)
    await message.answer(text2, disable_web_page_preview=True)


@router.message((F.text == "–ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –∑–∞–Ω–æ–≤–æ ‚ôªÔ∏è"), flags=flags)
async def stopwar_lets_anew(message: Message, state: Message):
    await commands_restart(message, state)
