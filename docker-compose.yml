version: "3.8"

services:

  mongodb:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - ~/apps/mongo:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoOTPOR
      - MONGO_INITDB_ROOT_PASSWORD=mongoOTPOR
    command: mongod --quiet --logpath /dev/null
  db:
    image: postgres:12
    container_name: antiprop_posgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5431:5432"

  redis:
    image: redis:alpine
    container_name: antiprop_redis
    ports:
      - "2342:2342"
    command: --port 2342

  web:
    build: .
    container_name: antiprop_Aiogrammwebhook
    command: bash -c 'python Testbot.py'
    volumes:
      - .:/code
    depends_on:
      - db
    network_mode: host

  grafana:
    image: grafana/grafana:8.5.3-ubuntu
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-configs:/etc/grafana
  prometheus:
    image: prom/prometheus:v2.36.0
    ports:
      - "9090:9090"
    volumes:
      - prom-data:/prometheus
      - prom-configs:/etc/prometheus
  node-exporter:
    image: prom/node-exporter:v1.3.1
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude'
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
volumes:
  grafana-data:
  grafana-configs:
  prom-data:
  prom-configs:






