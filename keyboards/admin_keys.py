import random

from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from bata import all_data
from data_base.DBuse import redis_just_one_read, mongo_select_admin_levels


async def main_admin_keyboard(t_id=None):
    usless_list = ('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
                   '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —É–≥–∞–¥–∞–µ—à—å, –≥–¥–µ —Å–∫—Ä—ã–≤–∞–ª–∞—Å—å –æ–ø–µ—á–∞—Ç–∫–∞',
                   '–•–æ–¥—è—Ç —Å–ª—É—Ö–∏, —á—Ç–æ –≥–¥–µ-—Ç–æ –≤ –∞–¥–º–∏–Ω–∫–µ —Å–ø—Ä—è—Ç–∞–Ω—ã —Å–æ–∫—Ä–æ–≤–∏—â–∞...')
    levels = await mongo_select_admin_levels(t_id)
    nmarkup = ReplyKeyboardBuilder()
    if t_id in all_data().super_admins:
        levels = all_data().access_levels
    if levels:
        if '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' in levels:
            nmarkup.row(types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –º–µ–¥–∏–∞"))
            nmarkup.row(types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"))
            nmarkup.row(types.KeyboardButton(text="–ò–≥—Ä—ã üé≠"))
        if t_id in all_data().super_admins:
            nmarkup.row(types.KeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º"))
            nmarkup.row(types.KeyboardButton(text="–ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞"))
            nmarkup.row(types.KeyboardButton(text="–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –±–æ—Ç–∞ –∫ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é"))
        if '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥' in levels:
            nmarkup.row(types.KeyboardButton(text="–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ üìà"))
        nmarkup.adjust(2)
        nmarkup.row(types.KeyboardButton(text="–í—ã–π—Ç–∏"))
    return nmarkup.as_markup(resize_keyboard=True, input_field_placeholder=random.choice(usless_list))


def games_keyboard(t_id=None):
    usless_list = ['–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
                   '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —É–≥–∞–¥–∞–µ—à—å, –≥–¥–µ —Å–∫—Ä—ã–≤–∞–ª–∞—Å—å –æ–ø–µ—á–∞—Ç–∫–∞']
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–õ–æ–∂—å –ø–æ —Ç–≤ üì∫"))
    nmarkup.row(types.KeyboardButton(text="–õ–æ–∂—å –¥—Ä—É–≥–∏—Ö –°–ú–ò üßÆ"))
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã üí¢"))
    nmarkup.row(types.KeyboardButton(text="–ò–≥—Ä–∞ –≤ –ø—Ä–∞–≤–¥—É ü•∏"))
    nmarkup.row(types.KeyboardButton(text="–ü—É—Ç–∏–Ω (–õ–æ–∂—å) üöÆ"))
    nmarkup.row(types.KeyboardButton(text="–ü—É—Ç–∏–Ω (–û–±–µ—â–∞–Ω–∏—è) üçú"))
    nmarkup.row(types.KeyboardButton(text="–ò–≥—Ä–∞ –ê–±—Å—É—Ä–¥–∞ üóØ"))
    nmarkup.row(types.KeyboardButton(text="–ò–≥—Ä–∞ –ù–∞—Ü–∏–∑–º–∞ üí§"))
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–π —É–¥–∞—Ä üêì"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"))
    nmarkup.adjust(2)
    return nmarkup.as_markup(resize_keyboard=True, input_field_placeholder=random.choice(usless_list))


def redct_editors():
    markup = ReplyKeyboardBuilder()
    markup.row(types.KeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤'))
    markup.row(types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'))
    markup.row(types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞'))
    markup.row(types.KeyboardButton(text='–ù–∞–∑–∞–¥'))
    return markup.as_markup(resize_keyboard=True)


def redct_media():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"))
    return nmarkup.as_markup(resize_keyboard=True)


def redct_text():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"))
    return nmarkup.as_markup(resize_keyboard=True)


def game_keys():
    nmrkup = ReplyKeyboardBuilder()
    nmrkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Å—é–∂–µ—Ç"))
    nmrkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—é–∂–µ—Ç"))
    nmrkup.add(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Å—é–∂–µ—Ç"))
    nmrkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    return nmrkup.as_markup(resize_keyboard=True)


def redct_games():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ù—É–∂–Ω–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–Ω–æ–ø–∫–∏"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"))
    return nmarkup.as_markup(resize_keyboard=True)


async def settings_bot():
    try:
        status = await redis_just_one_read('Usrs: admins: state: status:')
    except:
        pass
    print(status)
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã"))
    nmarkup.row(types.KeyboardButton(text="–≠–∫—Å–ø–æ—Ä—Ç"))
    nmarkup.row(types.KeyboardButton(text="–ò–º–ø–æ—Ä—Ç"))
    nmarkup.row(types.KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"))
    nmarkup.row(types.KeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞"))
    try:
        if '1' in status:
            nmarkup.row(types.KeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö. —Ä–µ–∂–∏–º üü¢"))
        else:
            nmarkup.row(types.KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö. —Ä–µ–∂–∏–º üî¥"))
    except:
        nmarkup.row(types.KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö. —Ä–µ–∂–∏–º üî¥"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"))
    nmarkup.adjust(1, 2, 1, 1, 1)
    return nmarkup.as_markup(resize_keyboard=True)


def middle_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    return nmarkup.as_markup(resize_keyboard=True)


def app_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"))
    nmarkup.row(types.KeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"))
    nmarkup.adjust(1, 1)
    return nmarkup.as_markup(resize_keyboard=True)


async def spam_admin_keyboard():
    try:
        status = await redis_just_one_read('Usrs: admins: spam: status:')
    except:
        pass
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ì–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"))
    nmarkup.row(types.KeyboardButton(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"))
    nmarkup.row(types.KeyboardButton(text="üõë –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ üõë"))
    try:
        if '1' in status:
            nmarkup.row(types.KeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üü¢"))
        else:
            nmarkup.row(types.KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üî¥"))
    except:
        nmarkup.row(types.KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üî¥"))
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è"))
    return nmarkup.as_markup(resize_keyboard=True)


def red_spam_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"))
    nmarkup.row(types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"))
    nmarkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    return nmarkup.as_markup(resize_keyboard=True)


def admin_games_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å —Å—é–∂–µ—Ç"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Å—é–∂–µ—Ç"))
    nmarkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—é–∂–µ—Ç"))
    nmarkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    return nmarkup.as_markup(resize_keyboard=True)


def secretrebornkb():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–°–∫–∞—á–∞—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–ü–æ—á–∏–Ω–∏—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–ü—Ä–∏–Ω—è—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.adjust(2)
    nmarkup.row(types.KeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω–µ–µ –æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ"))
    return nmarkup.as_markup(resize_keyboard=True)
