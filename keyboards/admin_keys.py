import random

from aiogram import types
from aiogram.utils.keyboard import ReplyKeyboardBuilder

from bata import all_data
from data_base.DBuse import poll_get, redis_just_one_read


def main_admin_keyboard(t_id=None):
    usless_list = ['–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
                   '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —É–≥–∞–¥–∞–µ—à—å, –≥–¥–µ —Å–∫—Ä—ã–≤–∞–ª–∞—Å—å –æ–ø–µ—á–∞—Ç–∫–∞']
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é –∫ –∏–≥—Ä–∞–º"))
    if t_id in all_data().super_admins:
        nmarkup.row(types.KeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º"))
        nmarkup.row(types.KeyboardButton(text="–ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞"))
        nmarkup.row(types.KeyboardButton(text="–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –±–æ—Ç–∞ –∫ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é"))
    nmarkup.row(types.KeyboardButton(text="–í—ã–π—Ç–∏"))
    nmarkup.adjust(2)
    return nmarkup.as_markup(resize_keyboard=True, input_field_placeholder=random.choice(usless_list))

def games_keyboard(t_id=None):
    usless_list = ['–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
                   '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —É–≥–∞–¥–∞–µ—à—å, –≥–¥–µ —Å–∫—Ä—ã–≤–∞–ª–∞—Å—å –æ–ø–µ—á–∞—Ç–∫–∞']
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã)"))
    nmarkup.row(types.KeyboardButton(text="–ò–≥—Ä–∞ –≤ –ø—Ä–∞–≤–¥—É"))
    nmarkup.row(types.KeyboardButton(text="–ü—É—Ç–∏–Ω"))
    nmarkup.row(types.KeyboardButton(text="–ü—É—Ç–∏–Ω - –æ–±–µ—â–∞–Ω–∏—è"))
    nmarkup.row(types.KeyboardButton(text="–ò–≥—Ä–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ—Å—Ç—å"))
    nmarkup.row(types.KeyboardButton(text="–£–∫—Ä–∞–∏–Ω–∞ –∏–ª–∏ –Ω–µ—Ç?"))
    nmarkup.row(types.KeyboardButton(text="–õ–æ–∂—å –ø–æ —Ç–≤"))



    if t_id in all_data().super_admins:
        nmarkup.row(types.KeyboardButton(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º"))
        nmarkup.row(types.KeyboardButton(text="–ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞"))
        nmarkup.row(types.KeyboardButton(text="–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –±–æ—Ç–∞ –∫ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—é"))
    nmarkup.row(types.KeyboardButton(text="–í—ã–π—Ç–∏"))
    nmarkup.adjust(2)
    return nmarkup.as_markup(resize_keyboard=True, input_field_placeholder=random.choice(usless_list))

def redct_editors():
    markup = ReplyKeyboardBuilder()
    markup.row(types.KeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–≤'))
    markup.row(types.KeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞'))
    markup.row(types.KeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞'))
    markup.row(types.KeyboardButton(text='–ù–∞–∑–∞–¥'))
    return markup.as_markup(resize_keyboard=True)

def redct_editors():
    markup = ReplyKeyboardBuilder()
    markup.row(types.KeyboardButton(text='–û—à–∏–±–∫–∞ –∏–ª–∏ –ª–æ–∂—å(–ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—ã)'))
    markup.row(types.KeyboardButton(text='–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –ª–æ–∂—å'))
    markup.row(types.KeyboardButton(text='–ü—É—Ç–∏–Ω'))
    markup.row(types.KeyboardButton(text='–ü—É—Ç–∏–Ω —Å—Ç–∞—Ä–∞—è –ª–æ–∂—å'))
    markup.row(types.KeyboardButton(text='–£–∫—Ä–∞–∏–Ω–∞ –∏–ª–∏ –Ω–µ—Ç?'))
    return markup.as_markup(resize_keyboard=True)

def redct_media():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –º–µ–¥–∏–∞"))
    nmarkup.row(types.KeyboardButton(text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return nmarkup.as_markup(resize_keyboard=True)


def redct_text():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—Å—Ç"))
    nmarkup.row(types.KeyboardButton(text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return nmarkup.as_markup(resize_keyboard=True)


def redct_games():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ù—É–∂–Ω–æ –ø—Ä–∏–¥—É–º–∞—Ç—å –∫–Ω–æ–ø–∫–∏"))
    nmarkup.row(types.KeyboardButton(text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return nmarkup.as_markup(resize_keyboard=True)



async def settings_bot():
    try:
        status = await redis_just_one_read('Usrs: admins: state: status:')
    except:
        pass
    print(status)
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–†–µ–¥–∞–∫—Ç–æ—Ä—ã –±–æ—Ç–∞"))
    nmarkup.row(types.KeyboardButton(text="–≠–∫—Å–ø–æ—Ä—Ç"))
    nmarkup.row(types.KeyboardButton(text="–ò–º–ø–æ—Ä—Ç"))
    nmarkup.row(types.KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞"))
    nmarkup.row(types.KeyboardButton(text="–†–∞—Å—Å—ã–ª–∫–∞"))
    try:
        if '1' in status:
            nmarkup.row(types.KeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö. —Ä–µ–∂–∏–º üü¢"))
        else:
            nmarkup.row(types.KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö. —Ä–µ–∂–∏–º üî¥"))
    except:
        nmarkup.row(types.KeyboardButton(text="–í–∫–ª—é—á–∏—Ç—å —Ç–µ—Ö. —Ä–µ–∂–∏–º üî¥"))
    nmarkup.row(types.KeyboardButton(text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    nmarkup.adjust(1, 2, 1, 1, 1)
    return nmarkup.as_markup(resize_keyboard=True)


def middle_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    return nmarkup.as_markup(resize_keyboard=True)

def app_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"))
    nmarkup.row(types.KeyboardButton(text="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"))
    nmarkup.adjust(1, 1)
    return nmarkup.as_markup(resize_keyboard=True)

def spam_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–ì–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"))
    nmarkup.row(types.KeyboardButton(text="–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏"))
    nmarkup.row(types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"))
    nmarkup.row(types.KeyboardButton(text="–í—ã–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É üü¢"))
    nmarkup.row(types.KeyboardButton(text="–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    return nmarkup.as_markup(resize_keyboard=True)


def red_spam_admin_keyboard():
    nmarkup = ReplyKeyboardBuilder()
    nmarkup.row(types.KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"))
    nmarkup.row(types.KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å"))
    nmarkup.row(types.KeyboardButton(text="–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"))
    nmarkup.row(types.KeyboardButton(text="–ù–∞–∑–∞–¥"))
    return nmarkup.as_markup(resize_keyboard=True)